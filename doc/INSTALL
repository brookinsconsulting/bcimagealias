BC Image Alias extension INSTALL

Introduction
============

1. What is the BC Image Alias extension?
   ------------------------------------------------

   BC Image Alias is a true eZ Publish extension
   that provides commandline script, workflow event,
   cronjob parts, class methods, module views and
   admin siteaccess content structure menu items to
   create, remove and regenerate content object
   image alias variations.

   For more information about this extension please read the README file.

1. Copyright
   ---------

   BC Image Alias is copyright 1999-2012 Brookins consulting and eZ Systems AS

   See: doc/COPYRIGHT for more information on the terms of the copyright and license

1.1. License
     -------

     BC Image Alias is licensed under the GNU General Public License.
    
     The complete license agreement is included in the doc/LICENSE file.
    
     BC Image Alias is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 2 of the License, or
     (at your option) any later version.
    
     BC Image Alias is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
    
     The GNU GPL gives you the right to use, modify and redistribute
     BC Image Alias under certain conditions. The GNU GPL license
     is distributed with the software, see the file doc/LICENSE.
    
     It is also available at http://www.gnu.org/licenses/gpl.txt
    
     You should have received a copy of the GNU General Public License
     along with BC Image Alias in doc/LICENSE.  If not, see http://www.gnu.org/licenses/.
    
     Using BC Image Alias under the terms of the GNU GPL is free (as in freedom).
    
     For more information or questions please contact
     license@brookinsconsulting.com

2. Requirements
   ------------

   The following requirements exists for using BC Image Alias extension:

   o  eZ Publish version:

      Make sure you use eZ Publish version 4.x (required) or higher.

      eZ Publish 4.6.x+ (Community Build, 2011.11+) is recommended.

   o  PHP version:

      Make sure you have PHP 5.x or higher.


Getting eZ Publish
==================

You can download a version of eZ Publish from share.ez.no,
you will find the various versions at:

http://share.ez.no/download

NOTE: You will only require eZ Publish 4.x or higher (if you have a more recent version)

Information on the installation of eZ Publish can be found at:
http://doc.ez.no/eZ-Publish/Technical-manual/4.6/Installation
and
http://doc.ez.no
http://share.ez.no


Installing BC Image Alias extension
==============================================

1. Copy the extension files into the extension directory
   ===========================

   Copy the package into the `extension' directory
   in the root of your eZ Publish installation.


2. Unpack the extension package files into the extension directory
   ===========================

   Unpack the files in the distribution. The command
   necessary is depends on the file you downloaded.

   [tar.gz]
   tar -zxvf bcimagealias-0_0_24.tar.gz

   [zip]
   unzip bcimagealias-0_0_24.tar.zip


3. (Optional) Git clone the latest GitHub brookinsconsulting bcimagealias extension sources into the extension directory
   ===========================

   You can optionaly fetch the latest extension source code from GitHub brookinsconsulting bcimagealias repository into the extension directory

cd /path/to/ezpublish;
cd extension;

mkdir bcimagealias;
cd bcimagealias;

git clone git@github.com:brookinsconsulting/bcimagealias.git . ;

sudo chmod -R 777 ../bcimagealias;


3.1. (Optional) Git download the latest GitHub brookinsconsulting bcimagealias extension sources into the extension directory
     ===========================

     You can optionaly fetch the latest extension source code from GitHub brookinsconsulting bcimagealias repository into the extension directory

cd /path/to/ezpublish;
cd extension;

mkdir bcimagealias;
cd bcimagealias;

wget https://github.com/brookinsconsulting/bcimagealias/tarball/master;

or

wget https://github.com/brookinsconsulting/bcimagealias/zipball/master

tar -zxf brookinsconsulting-bcimagealias-d1d1411.tar.gz;

or 

unzip brookinsconsulting-bcimagealias-d1d1411.tar.gz;

sudo chmod -R 777 ../bcimagealias;


4. We must now enable the extension in eZ Publish.
   ===========================

   To do this edit site.ini.append(.php) in the folder
   /path/to/ezpublish/settings/override/. If this file does not exist;
   create it. Locate (or add) the block

   [ExtensionSettings] and add the line:
   ActiveExtensions[]=bcimagealias

   If you run several sites using only one distribution
   and only some of the sites should use the extension,
   make the changes in the override file of that siteaccess.

   E.g /path/to/ezpublish/settings/siteaccess/ezwebin_site_user/site.ini.append(.php)
   But instead of using ActiveExtensions you must add these lines instead:

   [ExtensionSettings]
   ActiveAccessExtensions[]=bcimagealias


5. Regenerate eZ Publish class autoloads
   ===========================

   You must regenerate autoloads for extension classes to be available via eZ Publish autoloads. This may mean running the following different commands.

cd /path/to/ezpublish;

php bin/php/ezpgenerateautoloads.php -v -e;


6. There is no need to configure BC Image Alias extension after activation
   ===========================

   There are optional settings in settings/bcimagelalias.ini mostly workflow event specific. Create a settings override to customize these values.

6.1. Configure optional setttings

     One optional setting in settings/bcimagelalias.ini is the setting WorkflowEventCurrentSiteAccessAliasImageVariationCreation=disabled
     With this setting you can choose to change it to 'enabled' to create all image alias image variations for current siteaccess only (if set to 'enabled'). Alternatively you can leave the setting 'disabled' to create all image alias image variations for all related siteaccesses of the current siteaccess (if set to 'disabled').
     WorkflowEventCurrentSiteAccessAliasImageVariationCreation=disabled

     From Example Default: settings/siteaccess/ezwebin_site_user/site.ini.append.php

     [SiteAccessSettings]
     ...
     RelatedSiteAccessList[]
     RelatedSiteAccessList[]=ezwebin_site_user
     RelatedSiteAccessList[]=eng
     RelatedSiteAccessList[]=ezwebin_site_admin
     ...

     If you set the above bcimagealias.ini setting described above to 'disabled' or use the default setting of 'disabled' and the kernel overrides are enabled and normally available then bcimagealias will generate the image alias image variation image files for all related siteaccesses as shown above for example.

7. Enable kernel overrides
   ===========================

7.1 Kernel Override Requirements

    Kernel Class Overrides based on eZ Publish 4.6.x >= 4.6 ( Community Build, 2011.11+ ).

    While BC Image Alias by default requires both kernel overrides to provide the features within eZ Publish. 

    Though based on your usage (like what version of eZ Publish are you using bcimagealias with?) of the bcimagealias extension (which parts of the extension do you require, which do you not require?) you may be able to avoid using the provided kernel overrides entirely.

    If you do not use the 'related-siteaccess' script parameter, workflow event ini setting 'WorkflowEventCurrentSiteAccessAliasImageVariationCreation' set to 'disabled' (default, create override to change), and php 'BCImageAlias' class constructor / instance parameter $options['current-siteaccess'] set to false (not default), then you will not require the 'extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php' (modified) kernel class override be installed. The ezimagemanager class was modified to allow loading alias settings from multiple siteaccess ini override files and the default ini file directly to allow eZ Publish to create all the image aliases defined by default (in image.ini) and in several siteaccesses (related siteacesses setting in current siteaccess). Without this you additional functionality you can only generate image aliases defined within the current siteaccess. This may or may not be a concern to others depending on your specific use cases.

    Users of eZ Publish version 'Community Build 2011.11' or greater do not require the kernel override 'extension/bcimagealias/kernel/classes/datatypes/ezimage/ezimagealiashandler.php' (unmodified) at all and likely never will.

    The kernel override 'extension/bcimagealias/kernel/classes/datatypes/ezimage/ezimagealiashandler.php' was introduced into the extension in the aim of providing a convenient alternative to upgrading your entire eZ Publish 4.x installation to the 2011.11 build when all you need is one php class file to accomplish the task at hand, remove image aliases or generate them. This override if unused may be removed from the extension in the future.

    Also there were issues with the changes introduce in 2011.09 build later resolved in the 2011.11 build. Users of eZ Publish Community Build 2011.09, 2011.10 (or any version before) should likely use our provided kernel override as the extension is designed to use this version specifically for most use cases (our unmodified copies come from the 2011.11 build sources in which the previous issues are correctly resolved). After you upgrade to or beyond eZ Publish Community build 2011.11 you can remove this kernel override.

    eZ Publish 4.x >= 4.0 - BC Image Alias by default requires both kernel overrides for this version of eZ Publish
    -- Kernel Override File: extension/bcimagealias/kernel/classes/datatypes/ezimage/ezimagealiashandler.php
    -- Kernel Override File: extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php

    eZ Publish 4.6.x >= 4.6 ( Community Build, 2011.09+ ) - BC Image Alias by default requires both kernel overrides for this version of eZ Publish
    -- Kernel Override File: extension/bcimagealias/kernel/classes/datatypes/ezimage/ezimagealiashandler.php
    -- Kernel Override File: extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php

    eZ Publish 4.6.x >= 4.6 ( Community Build, 2011.10+ ) - BC Image Alias by default requires only one kernel override for this version of eZ Publish
    -- Kernel Override File: extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php

    eZ Publish 4.6.x >= 4.6 ( Community Build, 2011.11+ ) - BC Image Alias by default requires only one kernel override for this version of eZ Publish
    -- Kernel Override File: extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php

    eZ Publish 4.6.x >= 4.6 ( Community Build, 2011.12+ ) - BC Image Alias by default requires only one kernel override for this version of eZ Publish
    -- Kernel Override File: extension/bcimagealias/lib/ezimage/classes/ezimagemanager.php


7.2 Enable eZ Publish Kernel Overrides

    Remember to edit your config.php and enable this line:

define( 'EZP_AUTOLOAD_ALLOW_KERNEL_OVERRIDE', true );


7.3. Regenerate eZ Publish class kernel override autoloads

     You must regenerate autoloads for extension kernel override classes to be available via eZ Publish autloads. This may mean running the following different commands.

cd /path/to/ezpublish;

php bin/php/ezpgenerateautoloads.php -v -o;


8. (optional) Workflow & Trigger Setup
   ===========================
   If you wish to have content object image alias variations created just before objects are published. Enable this workflow and clear caches.

   A) In the eZ Publish admin, go to Setup -> Workflows
      and click New Workflow Group.

   B) Name the group something like "Image Alias Variation Creation" and click OK.
      The group will be added to the workflow groups.

   C) Click on the group you have just created, and in the
      Workflows box click the "New Workflow" button.

      1) Name the workflow "Create Image Alias Variation Image Files".

      3) You will now see an Event select dropdown.
         1) Select "Event / BC Image Alias - Create Object Image Alias Variation Image Files"

         2) Confirm you choice by clicking the "Add Event" button
            just to the right of the select dropdown.

      4) Enter a description "BC Image Alias Workflow event"

      5) Click OK to save your workflow.

   D) Now click on the Triggers link in the left hand menu.

      In the table "Workflow Triggers" you will see a list of available triggers.

      On the line: 'content, publish, after', (Workflow Drop Down)
      "Click" the dropdown select the workflow event you have just created.

   E) Clear all caches

   F) After you have followed all these steps, the extension's
      workflow settings should be activated, configured and functioning properly.


9. (optional) Content Object Publish: Testing Workflow & Trigger Setup
   ===========================
   After completing the above setup you should login to eZ Publish
   create or edit a content object which uses the image datatype
   (ezimagetype datatype) in one or more content object attributes,
   add at least one image to image attribute, publish your content object.

   Next, Locate the newly created image alias variation image files in the related var directory.


10. (optional) Admin siteaccess content structure and popup class menu module views
    ===========================

    You can create, regenerate or remove content tree node image alias image variation image files using your admin siteaccess content structure and popup class menus.

    You don't even need to use a separate module view to use these features. These menu options are enabled by default for all admin siteaccesses (which use the admin design)

10.1 Installation database configuration (setup roles and policies)

    To use the provided extension module views to create and remove image alias image variation images files in the admin siteaccess you must first add role policies to your 'Administrator' role.

10.1.1 Simply login to the admin siteaccess and navigate to the 'User Accounts: Roles and policies' (Uri: '/role/list')

10.1.2 Click on the edit icon for the 'Administrator' role.

10.1.3 Click 'New policy', Select 'bcimagealias' in the 'Module' drop down menu. Then select 'create' in the 'Function' drop down menu. Then click grant full access.

      Note: You can also use the 'Grant limited access' feature to limit access by content object class.

10.1.4 (optional) Click 'New policy', Select 'bcimagealias' in the 'Module' drop down menu. Then select 'remove' in the 'Function' drop down menu. Then click grant full access.

      Note: You can also use the 'Grant limited access' feature to limit access by content object class.

10.1.5 Click 'Save'.


10.2 Then simply click the 'Content Structure' menu in the admin siteaccess and use the content structure menu

10.2.1 Click on a node and see the 'BC Image Alias' sub menu, click the 'BC Image Alias' sub menu.

10.2.2 Then click on the action you wish to use.

10.2.3 You will be redirected to the node you selected upon completion.

10.2.4 If you get a role permission error you may have skipped the required role policy rule addition steps above correct or you may need to clear caches first.


Features
===========================

The complete extension features documentation is included in the file doc/FEATURES.


Use Cases
===========================

The complete extension usage documentation is included in the file doc/USECASES.


Usage
===========================

The complete extension usage documentation is included in the file doc/USAGE.


Troubleshooting
===============

1. Read the FAQ
   ------------

   Some problems are more common than others. The most common ones are listed
   in the the doc/FAQ.

2. Support
   -------

   If you have find any problems not handled by this document or the FAQ you
   can contact Brookins Consulting trough the support system:
   http://brookinsconsulting.com/contact
